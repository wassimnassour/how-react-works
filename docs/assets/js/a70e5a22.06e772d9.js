"use strict";(self.webpackChunkhowreactworks=self.webpackChunkhowreactworks||[]).push([[973],{629:(e,t,n)=>{n.d(t,{V:()=>s,_:()=>d});var a=n(3909),r=n(9901),i=n(1322);const o={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]};let l=30;function d(e){let{stack:t=[],index:n=0,showCallbackQueue:a=!0}=e,i=n,o=t.length;if(!o)return null;let d,s,c=t.slice(0,Math.min(i,o-1)),m=c.filter((e=>e.isAsync)).map((e=>({fromAsync:!0,statement:e.asyncCallback}))),k=o+m.length;if(i>=k&&(i=(i+k)%k,c=t.slice(0,Math.min(i,o-1)),m=c.filter((e=>e.isAsync)).map((e=>({fromAsync:!0,statement:e.asyncCallback})))),i>=o){if(i>k)throw new Error("Index is too bug "+i);let e=[...t,...m];s=e[i],c=e.slice(0,i),d=e.slice(i+1),m=[]}else s=t[i],d=t.slice(i+1);let u=0;return r.createElement("div",{className:"el_container"},r.createElement("div",{className:"el_callstack"},c.map((e=>r.createElement(p,{key:e.statement,data:e}))),s&&r.createElement(p,{isCurrent:!0,data:s,key:s.statement}),d.map((e=>r.createElement(p,{data:e,key:e.statement})))),a&&r.createElement("div",{className:"el_callback_queue"},m.map((e=>r.createElement(p,{style:{bottom:u--*l+m.length*l},data:e,key:e.statement,className:"el_cb_queue_element"})))))}function p(e){let{data:t,className:n,style:a,isCurrent:l}=e,{statement:d,fromAsync:p}=t,s=n;return s||(s=`el_cs_element ${l?"el_cs_current":""} ${p?"el_cs_element_async":""}`),r.createElement("pre",{style:a,className:s},r.createElement(i.Z,{language:"ts",theme:o},p?"\ud83d\udd02":"",d))}function s(e){let[t,n]=r.useState(0),{delay:i=2e3,...o}=e;return r.useEffect((()=>{let e=setInterval((()=>{n((e=>e+1))}),i);return()=>clearInterval(e)}),[i]),r.createElement(d,(0,a.Z)({},o,{index:t}))}},2014:(e,t,n)=>{n.d(t,{N7:()=>o,aO:()=>r,bI:()=>l,fY:()=>a,hG:()=>i});const a=[{statement:"if (!isValidContainer(container)) {\n  throw new Error('createRoot(...): Target container is not a DOM element.');\n}"},{statement:"let isStrictMode = false;\nlet identifierPrefix = '';\n// ...other options\n\nif (options) {\n  if (options.unstable_strictMode === true) {\n    isStrictMode = true;\n  }\n  // ...\n}"},{statement:"const fiberRoot = createContainer(\n  container, // the host element\n  ConcurrentRoot, // the root type, or RootTag\n  null, // hydration callbacks\n  isStrictMode, // options?.unstable_strictMode || false\n  isConcurrentUpdatesByDefault,  // options?.unstable_concurrentUpdatesByDefault || false\n  identifierPrefix, // options?.identifierPrefix || ''\n  onRecoverableError, // options?.onRecoverableError || reportError || console.error\n  transitionCallbacks, // options?.unstable_transitionCallbacks || null\n);"},{statement:"// Mark container as root\ncontainer.__reactContainer$randomValue = fiberRoot.current;"},{statement:"// Injet ReactDom dispatcher\nDispatcher.current = ReactDOMClientDispatcher;"},{statement:"return new ReactDOMRoot(fiberRoot);"}],r=[{statement:"const current = container.current;"},{statement:"const lane = requestUpdateLane(current);"},{statement:"const update = createUpdate(lane);\nupdate.payload = {element};\nupdate.callback = callback;"},{statement:"const root = enqueueUpdate(current, update, lane);"},{statement:"scheduleUpdateOnFiber(root, current, lane);",isAsync:!0,asyncCallback:"processRootScheduleInMicrotask(root);"},{statement:"entangleTransitions(root, current, lane);"}],i=[{statement:"root.render(children);",isAsync:!0,asyncCallback:"processRootScheduleInMicrotask(root);"},{statement:"triggerImportantDataFetch();"},{statement:"RegisterServiceWorker();"}],o=[{statement:"if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n  throw new Error('Should not already be working.');\n}"},{statement:"const originalCallbackNode = root.callbackNode;\nconst didFlushPassiveEffects = flushPassiveEffects();\n\nif (didFlushPassiveEffects && root.callbackNode !== originalCallbackNode) {\n  return null;\n}"},{statement:"let lanes = getNextLanes(\n  root,\n  root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n);\nif (lanes === NoLanes) {\n  return null;\n}"},{statement:"const shouldTimeSlice =\n  !includesBlockingLane(root, lanes) &&\n  !includesExpiredLane(root, lanes) &&\n  (disableSchedulerTimeoutInWorkLoop || !didTimeout);"},{statement:"let exitStatus = shouldTimeSlice\n  ? renderRootConcurrent(root, lanes)\n  : renderRootSync(root, lanes);"},{statement:"if (renderWasSuccessfull) {\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  finishConcurrentRender(root, exitStatus, finishedWork, lanes);\n} else {\n  // manage errors and suspense\n}"},{statement:"ensureRootIsScheduled(root);\nreturn getContinuationForRoot(root, originalCallbackNode);"}],l=[{statement:"const prevExecutionContext = executionContext;\nexecutionContext |= RenderContext;\nconst prevDispatcher = pushDispatcher(root.containerInfo);"},{statement:"if (workInProgressRoot !== null || workInProgressRootRenderLanes !== lanes) {\n   // [...] some work\n   // highlight-next-line\n   prepareFreshStack(root, lanes);\n}"},{statement:"do {\n  try {\n    if (didSuspendDuringHydration) {\n      resetWIPStack();\n      workInProgressRootExitStatus = RootDidNotComplete;\n      break;\n    }\n    \n    // [...] Other branches to break when needed\n\n    // highlight-next-line\n    workLoopSync();\n    // Why a break here you wonder ? Hint: there is no break in the catch block\n    break;\n  } catch (e) {\n    // highlight-next-line\n    handleThrow(root, e);\n  }\n} while (true)"},{statement:"if (didSuspendInShell) {\n  root.shellSuspendCounter++;\n}\n\nexecutionContext = prevExecutionContext;\nworkInProgressRoot = null;\nworkInProgressRootRenderLanes = NoLanes;"},{statement:"finishQueueingConcurrentUpdates();\nreturn workInProgressRootExitStatus;"}]},7401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var a=n(3909),r=(n(9901),n(7522)),i=n(2014),o=n(629);const l={sidebar_position:1},d="How createRoot works",p={unversionedId:"react-dom/how.createroot.works",id:"react-dom/how.createroot.works",title:"How createRoot works",description:"When following a React tutorial or the docs, the first step that you should do",source:"@site/docs/react-dom/1.how.createroot.works.md",sourceDirName:"react-dom",slug:"/react-dom/how.createroot.works",permalink:"/how-react-works/docs/react-dom/how.createroot.works",draft:!1,editUrl:"https://github.com/incepter/how-react-works/edit/main/packages/howreactworks/docs/react-dom/1.how.createroot.works.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"reactSidebar",previous:{title:"Introduction",permalink:"/how-react-works/docs/intro"},next:{title:"How root.render() works",permalink:"/how-react-works/docs/react-dom/how.root_render.works"}},s={},c=[{value:"Signature",id:"signature",level:2},{value:"Implementation",id:"implementation",level:2},{value:"TL;DR",id:"tldr",level:3},{value:"1. Ensure that <code>container</code> is a valid React container",id:"1-ensure-that-container-is-a-valid-react-container",level:3},{value:"2. Warn in dev about bad containers",id:"2-warn-in-dev-about-bad-containers",level:3},{value:"3. Close over the provided <code>options</code>",id:"3-close-over-the-provided-options",level:3},{value:"4. Call <code>createContainer</code> with the information in scope:",id:"4-call-createcontainer-with-the-information-in-scope",level:3},{value:"5. Mark the <code>container</code> as <code>Root</code>",id:"5-mark-the-container-as-root",level:3},{value:"6. Inject the current <code>ReactDispatcher</code>",id:"6-inject-the-current-reactdispatcher",level:3},{value:"7. Listen to all supported events on the provided <code>container</code>",id:"7-listen-to-all-supported-events-on-the-provided-container",level:3},{value:"8. Return an instance of type <code>ReactDOMRoot</code>",id:"8-return-an-instance-of-type-reactdomroot",level:3},{value:"Recap",id:"recap",level:2},{value:"Annex",id:"annex",level:2}],m={toc:c},k="wrapper";function u(e){let{components:t,...l}=e;return(0,r.kt)(k,(0,a.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-createroot-works"},"How ",(0,r.kt)("inlineCode",{parentName:"h1"},"createRoot")," works"),(0,r.kt)("p",null,"When following a React tutorial or the docs, the first step that you should do\nin order to use React is to import ",(0,r.kt)("inlineCode",{parentName:"p"},"createRoot")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"react-dom/client"),",\nthen call it by providing a ",(0,r.kt)("inlineCode",{parentName:"p"},"container"),", then call the ",(0,r.kt)("inlineCode",{parentName:"p"},"render")," function from\nthe resulting ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { App } from "./app";\nimport { createRoot } from "react-dom/client";\n\nconst container = document.getElementById("root");\n\n// This is the first step\n// highlight-next-line\nconst root = createRoot(container);\n\n// Then, the second\n// highlight-next-line\nroot.render(<App />);\n')),(0,r.kt)("p",null,"This section is all about ",(0,r.kt)("inlineCode",{parentName:"p"},"createRoot")," (the first step). We will see its\nsignature, the purpose of creating the ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," object and what exactly is."),(0,r.kt)("h2",{id:"signature"},"Signature"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createRoot")," is defined as follows, you can see it ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/e50531692010bbda2a4627b07c7c810c3770a52a/packages/react-dom/src/client/ReactDOM.js#L115"},"here too"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function createRoot(\n  container: Element | Document | DocumentFragment,\n  options?: CreateRootOptions\n): RootType { /* [Not Native code] */ }\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createRoot")," accepts a DOM ",(0,r.kt)("inlineCode",{parentName:"p"},"Node")," and returns an object\nof type ",(0,r.kt)("inlineCode",{parentName:"p"},"RootType")," (The dom node is often called the ",(0,r.kt)("inlineCode",{parentName:"p"},"HostRoot"),") that you will\nuse to render your application. We will see the returned object in details\nlater in this section."),(0,r.kt)("p",null,"The second optional argument of ",(0,r.kt)("inlineCode",{parentName:"p"},"createRoot")," is an ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," object. Up until\nwriting these words, here is the following supported options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unstable_strictMode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable/disable StrictMode at root level")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unstable_concurrentUpdatesByDefault")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Make concurrent updates the default for a root.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unstable_transitionCallbacks")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TransitionTracingCallbacks")),(0,r.kt)("td",{parentName:"tr",align:null},"I don't know what are these. It will be documented/edited when we get to it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"identifierPrefix")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"React Flight root's identifierPrefix.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onRecoverableError")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(error: any) => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback when React auto recovers from errors. Try it ",(0,r.kt)("a",{parentName:"td",href:"https://codesandbox.io/s/stoic-glitter-sstwtq"},"here"),".")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TransitionTracingCallbacks")," are defined ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb/packages/react-reconciler/src/ReactInternalTypes.js#L292"},"here"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Having the ",(0,r.kt)("inlineCode",{parentName:"p"},"unstable_")," prefix means that this option is still in development\nor experimental. Once stable and documented in React docs themselves, the\n",(0,r.kt)("inlineCode",{parentName:"p"},"unstable_")," prefix will be removed and there are chances that even\nthe name may change."),(0,r.kt)("p",{parentName:"admonition"},"So, avoid experimental and unstable APIs unless you are fully confident that\nyou can manage it (don't forget to leave some comments too to instruct the\nnext developer \ud83d\ude09).")),(0,r.kt)("p",null,"The root object is used by React to render you whole application and manage it\nover time. So it has a crucial role in your application: ",(0,r.kt)("inlineCode",{parentName:"p"},"it is its Root"),".\nIt has enough information that allows to know the state of your tree at any\npoint in time and even manipulate it."),(0,r.kt)("h2",{id:"implementation"},"Implementation"),(0,r.kt)("h3",{id:"tldr"},"TL;DR"),(0,r.kt)(o.V,{stack:i.fY,showCallbackQueue:!1,mdxType:"AnimatedEventLoop"}),(0,r.kt)("h3",{id:"1-ensure-that-container-is-a-valid-react-container"},"1. Ensure that ",(0,r.kt)("inlineCode",{parentName:"h3"},"container")," is a valid React container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"if (!isValidContainer(container)) {\n  throw new Error('createRoot(...): Target container is not a DOM element.');\n}\n")),(0,r.kt)("p",null,"   Valid containers ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/80d9a40114bb43c07d021e8254790852f450bd2b/packages/react-dom/src/client/ReactDOMRoot.js#L347"},"are"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Element"},"Dom elements"),"\nsuch as ",(0,r.kt)("inlineCode",{parentName:"li"},"div"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"p")," and so on."),(0,r.kt)("li",{parentName:"ul"},"The main page's ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Document"},"Document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"},"Document Fragments")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Comment"},"Comments"),"\nin React builds that have this feature allowed.")),(0,r.kt)("h3",{id:"2-warn-in-dev-about-bad-containers"},"2. Warn in dev about bad containers"),(0,r.kt)("p",null,"   In development builds, you may be ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/80d9a40114bb43c07d021e8254790852f450bd2b/packages/react-dom/src/client/ReactDOMRoot.js#L372"},"warned"),"\nif you violate one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"using ",(0,r.kt)("inlineCode",{parentName:"p"},"body")," as a ",(0,r.kt)("inlineCode",{parentName:"p"},"container"),", which is often used by extensions and third\nparty libraries, so it may fool React into reconciliation issues.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You previously called the legacy ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactDOM.render(container, element)"),"\non that ",(0,r.kt)("inlineCode",{parentName:"p"},"container"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You already called ",(0,r.kt)("inlineCode",{parentName:"p"},"createRoot")," with the same ",(0,r.kt)("inlineCode",{parentName:"p"},"container"),"."),(0,r.kt)("p",{parentName:"li"},"It is important to keep these things in mind and avoid them."))),(0,r.kt)("h3",{id:"3-close-over-the-provided-options"},"3. Close over the ",(0,r.kt)("a",{parentName:"h3",href:"https://github.com/facebook/react/blob/80d9a40114bb43c07d021e8254790852f450bd2b/packages/react-dom/src/client/ReactDOMRoot.js#L199"},"provided ",(0,r.kt)("inlineCode",{parentName:"a"},"options"))),(0,r.kt)("p",null,"   Next, we will declare variables mirroring the provided options and fall back\nto their default values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"// simplified\nlet isStrictMode = false;\nlet identifierPrefix = '';\n// ...other options\n\nif (options) {\n  if (options.unstable_strictMode === true) {\n    isStrictMode = true;\n  }\n  // ...\n}\n")),(0,r.kt)("h3",{id:"4-call-createcontainer-with-the-information-in-scope"},"4. Call ",(0,r.kt)("inlineCode",{parentName:"h3"},"createContainer")," with the information in scope:"),(0,r.kt)("p",null,"   Now, the ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," actual creation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const fiberRoot = createContainer(\n  container, // the host element\n  ConcurrentRoot, // the root type, or RootTag\n  null, // hydration callbacks\n  isStrictMode, // options?.unstable_strictMode || false\n  isConcurrentUpdatesByDefault,  // options?.unstable_concurrentUpdatesByDefault || false\n  identifierPrefix, // options?.identifierPrefix || ''\n  onRecoverableError, // options?.onRecoverableError || reportError || console.error\n  transitionCallbacks, // options?.unstable_transitionCallbacks || null\n);\n")),(0,r.kt)("p",null,"   The resulting object has many properties, for the sake of clarity of this\nparticular section, we will skip over them until later. But we will see\nthe creation sequence. ",(0,r.kt)("inlineCode",{parentName:"p"},"createContainer")," itself will delegate ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/80d9a40114bb43c07d021e8254790852f450bd2b/packages/react-reconciler/src/ReactFiberReconciler.js#L257"},"the work"),"\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"createFiberRoot")," with almost the same parameters, with a ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," value\nfor the ",(0,r.kt)("inlineCode",{parentName:"p"},"initialChildren")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," for hydrate (obviously)."),(0,r.kt)("p",null,"   Now that we are at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb/packages/react-reconciler/src/ReactFiberRoot.js#L130"},"the real deal"),",\nlet's break it step by step:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create an instance of a ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberRootNode")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const fiberRoot = new FiberRootNode(\n  container, // the host element\n  tag, // ConcurrentRoot\n  hydrate, // false for this path\n  identifierPrefix, // options?.identifierPrefix || ''\n  onRecoverableError, // options?.onRecoverableError || reportError || console.error\n);\n")),(0,r.kt)("p",{parentName:"li"},"This creation ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb/packages/react-reconciler/src/ReactFiberRoot.js#L47"},"involves"),"\nlike mentioned many properties, don't worry, you will have a table later\ndescribing each one of them. But it is important that you sneak peek \ud83d\ude09.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the first instance ",(0,r.kt)("inlineCode",{parentName:"p"},"Fiber")," of kind ",(0,r.kt)("inlineCode",{parentName:"p"},"HostRoot"),":"),(0,r.kt)("p",{parentName:"li"},"By no doubts you've heard of the famous ",(0,r.kt)("inlineCode",{parentName:"p"},"Fiber")," architecture in React, at\nthis point, the first ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb/packages/react-reconciler/src/ReactFiberRoot.js#L164"},"one is created"),"."),(0,r.kt)("p",{parentName:"li"},"One important thing to detect is the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/254cbdbd6d851a30bf3b649a6cb7c52786766fa4/packages/react-reconciler/src/ReactTypeOfMode.js#L12"},"React Mode"),",\nReact will use it to decide which logic to perform in many cases."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"// simplified\n const unitializedFiber = new FiberNode(\n  HostRoot, // tag\n  null, // pendingProps\n  null, // key\n  mode, // deduced react mode (strict mode, strict effects, concurrent updates..)\n);\n")),(0,r.kt)("p",{parentName:"li"},"We've skipped until now two major and important creations: ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberRootNode"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberNode"),". We will see them in a few, but it is important that your\nmental model start grasping that, when creating a ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," for React, we\ncreate a special instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberRootNode")," that will also have an\nattached ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberNode")," to it.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Reference ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberNode")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberRootNode")," in each other:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"fiberRoot.current = unitializedFiber;\nunitializedFiber.stateNode = fiberRoot;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Initialize the ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberNode"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"memoizedState"),":"),(0,r.kt)("p",{parentName:"li"},"This initialization is conditional as it changes a bit when the ",(0,r.kt)("inlineCode",{parentName:"p"},"cache"),"\nfeature ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb/packages/react-reconciler/src/ReactFiberRoot.js#L172"},"is enabled in React"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"// simplified\nuninitializedFiber.memoizedState = {\n  element: null, // initialChildren\n  isDehydrated: false, // hydrate\n  cache: null, // put behind a feature flag\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Initialize the ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberNode"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"updateQueue"),":\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/4bbac04cd3624962900bb7800ba4f9609d3a1fd3/packages/react-reconciler/src/ReactFiberClassUpdateQueue.js#L175"},"This initialization"),"\ncreates the ",(0,r.kt)("inlineCode",{parentName:"p"},"updateQueue")," property for our ",(0,r.kt)("inlineCode",{parentName:"p"},"unintializedFiber"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"unitializedFiber.updateQueue = {\n  baseState: fiber.memoizedState, // we just created this above\n  firstBaseUpdate: null,\n  lastBaseUpdate: null,\n  shared: {\n    pending: null,\n    lanes: NoLanes, // 0\n    hiddenCallbacks: null,\n  },\n  callbacks: null,\n};\n")),(0,r.kt)("p",{parentName:"li"},"Don't worry, we will explain for what every one of them is used when time\ncomes.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Finally, return the ",(0,r.kt)("inlineCode",{parentName:"p"},"FiberRootNode"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"return fiberRoot;\n")))),(0,r.kt)("h3",{id:"5-mark-the-container-as-root"},"5. Mark the ",(0,r.kt)("inlineCode",{parentName:"h3"},"container")," as ",(0,r.kt)("inlineCode",{parentName:"h3"},"Root")),(0,r.kt)("p",null,"   Here, React will mutate your provided ",(0,r.kt)("inlineCode",{parentName:"p"},"container")," object by adding a special\nproperty with a name unique for the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/b55d31955982851284bb437a5187a6c56e366539/packages/react-dom-bindings/src/client/ReactDOMComponentTree.js#L72"},"loaded React instance"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"// simplified\ncontainer.__reactContainer$randomValue = fiberRoot.current; // unintializedFiber\n")),(0,r.kt)("h3",{id:"6-inject-the-current-reactdispatcher"},"6. Inject the current ",(0,r.kt)("inlineCode",{parentName:"h3"},"ReactDispatcher")),(0,r.kt)("p",null,"   The ",(0,r.kt)("inlineCode",{parentName:"p"},"Dispatcher")," concept in React will have its own section as it has so many\ngotchas."),(0,r.kt)("p",null,"   At this point, we attach the ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactDOMClientDispatcher")," which is\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/e50531692010bbda2a4627b07c7c810c3770a52a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js#L2067"},"defined here"),"."),(0,r.kt)("p",null,"   We will come back to this in a later blog in order to fully explain it too."),(0,r.kt)("p",null,"   There are several dispatchers used by React, they will all be explained."),(0,r.kt)("p",null,"   The dispatcher set at this point is used in the server by ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactFloat"),". We'll\nget back to this in the right time. But for now, we won't be seeing it during\nsimple client render."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"Dispatcher.current = ReactDOMClientDispatcher;\n")),(0,r.kt)("h3",{id:"7-listen-to-all-supported-events-on-the-provided-container"},"7. Listen to all supported events on the provided ",(0,r.kt)("inlineCode",{parentName:"h3"},"container")),(0,r.kt)("p",null,"   As you may be aware of, React implemented a plugin event system that's\ndetailed in its own section."),(0,r.kt)("p",null,"   At this point, React will attach necessary event handlers to the root\n",(0,r.kt)("inlineCode",{parentName:"p"},"container")," with different priorities."),(0,r.kt)("p",null,"   You can sneak peek ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/fda1f0b902b527089fe5ae7b3aa573c633166ec9/packages/react-dom-bindings/src/events/DOMPluginEventSystem.js#L406"},"starting from here"),"\nbefore reading this section later."),(0,r.kt)("h3",{id:"8-return-an-instance-of-type-reactdomroot"},"8. Return an instance of type ",(0,r.kt)("inlineCode",{parentName:"h3"},"ReactDOMRoot")),(0,r.kt)("p",null,"So this is the final step in ",(0,r.kt)("inlineCode",{parentName:"p"},"createRoot"),"!"),(0,r.kt)("p",null,"This step only calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactDOMRoot")," constructor with the resulting\n",(0,r.kt)("inlineCode",{parentName:"p"},"fiberRoot")," object."),(0,r.kt)("p",null,"The constructor itself only references the given ",(0,r.kt)("inlineCode",{parentName:"p"},"fiberRoot")," into ",(0,r.kt)("inlineCode",{parentName:"p"},"_internalRoot"),",\nthat you may already have seen if you ever inspected the ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," object.\nBut there are two methods too: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/80d9a40114bb43c07d021e8254790852f450bd2b/packages/react-dom/src/client/ReactDOMRoot.js#L102"},"render method"),"\nand the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react/blob/80d9a40114bb43c07d021e8254790852f450bd2b/packages/react-dom/src/client/ReactDOMRoot.js#L152"},"unmount method"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"function ReactDOMRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\n\nReactDOMRoot.prototype.render = ... /* [Not Native Code] */\nReactDOMRoot.prototype.unmout = ... /* [Not Native Code] */\n")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"_internalRoot")," property is ",(0,r.kt)("strong",{parentName:"p"},"not documented")," in the React docs and should\nnot be used.")),(0,r.kt)("h2",{id:"recap"},"Recap"),(0,r.kt)("p",null,"Here is a small diagram illustrating the created objects with some of their\nproperties (unstable and dev properties were omitted for now):"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"createRoot fingerprint",src:n(3810).Z,width:"1654",height:"1169"})),(0,r.kt)("h2",{id:"annex"},"Annex"),(0,r.kt)("p",null,"You can have a look at the details of the skipped objects properties if you want."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Details of FiberRootNode and FiberNode properties"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"FiberRootNode properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tag")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ConcurrentRoot")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"LegacyRoot"),", the type of the root.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"containerInfo")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Element")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"container")," passed to ",(0,r.kt)("inlineCode",{parentName:"td"},"createRoot"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pendingChildren")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"current")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FiberNode")),(0,r.kt)("td",{parentName:"tr",align:null},"The current Fiber instance for this root")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pingCache")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"WeakMap<Wakeable, Set<mixed>>")),(0,r.kt)("td",{parentName:"tr",align:null},"A cache around promises and ping listeners")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"finishedWork")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"A finished work in progress HostRoot ready to be committed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timeoutHandle")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TimeoutID or -1")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the timeout (host specific) for scheduling a fallback commit when tree is suspending")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cancelPendingCommit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null or () => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Cancels the scheduled timeout for committing a suspending tree")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"context")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pendingContext")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"next")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FiberRoot or null")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates a linkedList of roots with pending work")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callbackNode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callbackPriority")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lane")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"expirationTimes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LaneMap<number>")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hiddenUpdates")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LaneMap<Array<ConcurrentUpdate> or null>")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pendingLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suspendedLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pingedLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"expiredLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"finishedLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"errorRecoveryDisabledLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"shellSuspendCounter")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"entangledLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"entanglements")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LaneMap<Lanes>")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"identifierPrefix")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onRecoverableError")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(error: mixed, errorInfo: {digest?: string, componentStack?: string}) => void")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD"))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"FiberNode properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tag")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"WorkTag (number)")),(0,r.kt)("td",{parentName:"tr",align:null},"The tag identifying the type ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebook/react/blob/6396b664118442f3c2eae7bf13732fcb27bda98f/packages/react-reconciler/src/ReactWorkTags.js#L10"},"of the fiber"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null or string")),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of this fiber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"elementType")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ReactElement.type")),(0,r.kt)("td",{parentName:"tr",align:null},"The preserved element.type from your element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"The resolved function or class linked to this fiber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"stateNode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"return")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"The parent fiber (almost)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"child")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"The first child of this fiber (the tree)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sibling")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"This fiber's sibling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The index of this fiber, when a member of a list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ref")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"RefObject")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refCleanup")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null or () => void")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pendingProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"Work in progress props")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"memoizedProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"Committed props")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"updateQueue")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UpdateQueue")),(0,r.kt)("td",{parentName:"tr",align:null},"A linkedList of pending updates on this fiber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"memoizedState")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dependencies")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dependencies or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TypeOfMode (number)")),(0,r.kt)("td",{parentName:"tr",align:null},"A number ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebook/react/blob/254cbdbd6d851a30bf3b649a6cb7c52786766fa4/packages/react-reconciler/src/ReactTypeOfMode.js#L10"},"describing the fiber properties and its subtree"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"flags")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Flags (number)")),(0,r.kt)("td",{parentName:"tr",align:null},"A number describing the ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebook/react/blob/768f965de2d4c6be7f688562ef02382478c82e5b/packages/react-reconciler/src/ReactFiberFlags.js#L12"},"behavior and capabilities of this fiber"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subtreeFlags")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Flags (number)")),(0,r.kt)("td",{parentName:"tr",align:null},"The merged Flags from the children of this Fiber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"deletions")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array<Fiber> or null")),(0,r.kt)("td",{parentName:"tr",align:null},"Deleted children fibers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nextEffect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"firstEffect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"lastEffect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"lanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"childLanes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Lanes")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"alternate")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fiber or null")),(0,r.kt)("td",{parentName:"tr",align:null},"TBD"))))),(0,r.kt)("p",null,"It may be not very readable or beneficial, but ",(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/inspiring-monad-r4zkqd?file=/src/index.js"},"here is"),"\na codesandbox showing these properties from the created ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," object."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"During my time working with React, I NEVER used the root object or any of its\nproperties."),(0,r.kt)("p",{parentName:"admonition"},"The React team also discourage using them, because you will likely\nbreak React when manipulating them, and they change over time, so they aren't\nstable and using them should not be an option."))),(0,r.kt)("p",null,"By now, we have created our FiberRoot object that will allow us to render\nour application in the given dom ",(0,r.kt)("inlineCode",{parentName:"p"},"container"),"."),(0,r.kt)("p",null,"In the next section we will read about how ",(0,r.kt)("inlineCode",{parentName:"p"},"root.render()")," works."))}u.isMDXComponent=!0},3810:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1.create-root-result-uml-light-42a93f6be26b5a953bd81d9323790f2a.png"}}]);